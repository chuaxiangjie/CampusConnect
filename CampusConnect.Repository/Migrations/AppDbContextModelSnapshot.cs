// <auto-generated />
using System;
using CampusConnect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampusConnect.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CampusConnect.Domain.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af2c2357-0c2d-42fe-ab8c-a8000d6c32e1"),
                            CountryCode = "SGP",
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("caf8f361-237b-43c6-bdd9-5444595a5910"),
                            CountryCode = "MYS",
                            Name = "Malaysia"
                        });
                });

            modelBuilder.Entity("CampusConnect.Domain.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Webpages")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2ec79fc-04a6-49b8-8f7c-eb3adec9f771"),
                            CountryId = new Guid("af2c2357-0c2d-42fe-ab8c-a8000d6c32e1"),
                            Created = new DateTime(2024, 9, 9, 18, 50, 22, 78, DateTimeKind.Utc).AddTicks(4115),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "National University of Singapore",
                            Webpages = "http://www.website1.com,http://www.register.website1.com"
                        },
                        new
                        {
                            Id = new Guid("c9f4b1db-2e16-452b-b401-52e1f27c8840"),
                            CountryId = new Guid("af2c2357-0c2d-42fe-ab8c-a8000d6c32e1"),
                            Created = new DateTime(2024, 9, 9, 18, 50, 22, 78, DateTimeKind.Utc).AddTicks(4119),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Nanyang Technological University",
                            Webpages = "http://www.website2.com,http://www.register.website2.com"
                        },
                        new
                        {
                            Id = new Guid("7cf69bce-952f-4209-b919-da909c86671f"),
                            CountryId = new Guid("caf8f361-237b-43c6-bdd9-5444595a5910"),
                            Created = new DateTime(2024, 9, 9, 18, 50, 22, 78, DateTimeKind.Utc).AddTicks(4122),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Universiti Malaya",
                            Webpages = "htp://www.website3.com,http://www.register.website3.com"
                        });
                });

            modelBuilder.Entity("CampusConnect.Domain.UserUniversityBookmark", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "UniversityId");

                    b.HasIndex("UniversityId");

                    b.ToTable("UserUniversityBookmarks");
                });

            modelBuilder.Entity("CampusConnect.Domain.University", b =>
                {
                    b.HasOne("CampusConnect.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CampusConnect.Domain.UserUniversityBookmark", b =>
                {
                    b.HasOne("CampusConnect.Domain.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });
#pragma warning restore 612, 618
        }
    }
}
